<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
       default-autowire="byName">

    <!--FreeMarker-->


    <!-- 注解扫描的包 -->
    <context:component-scan base-package="home" />
    <!-- 开启注解方案2 -->
    <mvc:annotation-driven />

    <!-- 强制SPRING使用CGLIB动态代理，不使用JDK代理。如果不强制，则上下文注入 都得用接口的形式注入，Hibernate 的配置也得加 这个 -->
    <aop:config proxy-target-class="true" />

    <!-- 静态资源访问，方案1-->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- 转码器(主要针对输出json) -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean
                        class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
                <bean
                        class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean
                        class="org.springframework.http.converter.ResourceHttpMessageConverter" />
                <bean
                        class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
                <bean
                        class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
                <bean
                        class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
            </list>
        </property>
    </bean>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760" />
    </bean>

    !-- FreeMarker视图解析 在这里配置后缀名ftl和视图解析器。。 -->
    <bean id="freemarkerConfiguration"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:spring/properties/freemarker.properties"/>
    </bean>


    <bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="freemarkerSettings" ref="freemarkerConfiguration"/>
        <property name="templateLoaderPath" value="/WEB-INF/view/" />
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
    </bean>

    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

    <bean id="freemarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="viewNames" value="*.jsp"/>
        <property name="contentType" value="text/html;charset=utf-8"/>
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=""/>
        <property name="order" value="2"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
    </bean>






    <!-- 拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/home/**" />
            <bean class="home.interceptor.ContextPathInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="home.interceptor.SessionInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>
